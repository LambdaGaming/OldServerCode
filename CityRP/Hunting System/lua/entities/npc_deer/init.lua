AddCSLuaFile('cl_init.lua') AddCSLuaFile('shared.lua') include('shared.lua')   ENT.Model = "models/deer/deer_animated.mdl" --NPC HealthENT.health = 120ENT.dead = false ENT.noticed = false   ENT.idle1 = "deernpc/idle1.wav" function ENT:Initialize()	self:SetModel( self.Model )	self:SetHullType ( HULL_MEDIUM )	self:SetHullSizeNormal()	self:SetSolid( SOLID_BBOX )	self:SetMoveType( MOVETYPE_STEP )	self:SetMaxYawSpeed( 900 )	self:CapabilitiesAdd( CAP_MOVE_GROUND )	self:SetHealth(self.health)endfunction ENT:Think()	self:AnimalBehaviour()	if math.random(1,500) == 50 then		self:EmitSound( self.idle1, 460, math.random(80,120))	endendfunction ENT:OnTakeDamage(dmg)	self:StopSound(self.idle1)	self:SetSchedule(SCHED_RUN_RANDOM)	self:SetHealth(self:Health() - dmg:GetDamage())	if self:Health() <= 0 && !self.dead then		self.dead = true		timer.Create( "DeathRun", math.random( 3, 15), 1, function() self:Killed() end )	endendfunction ENT:Killed()	self:StopSound(self.idle1)	local gib = ents.Create( "prop_ragdoll" )	gib:SetModel( "models/deer/deer_animated.mdl" )	gib:SetPos( self:GetPos() )	gib:SetSkin( self:GetSkin() )	gib:SetAngles( self:GetAngles() )	gib:Spawn()	gib:SetCollisionGroup( COLLISION_GROUP_WORLD )	gib:GetPhysicsObject():AddVelocity( Vector( math.Rand( -150, 150 ), math.Rand( -150, 150 ), math.Rand( -150, 50 ) ) )	gib:SetNWBool( "IsValidDeerCorpse", true )	self:Remove()end function ENT:AnimalBehaviour()	local nearby = ents.FindInSphere(self:GetPos(),500)	if (!nearby) then return end	for k,v in pairs(nearby) do		if self:Disposition(v) == 1 || (v:IsPlayer() && GetConVarNumber("ai_ignoreplayers") == 0) then			self.noticed = true			self:AddEntityRelationship(player.GetByID(1), D_FR, 99 )		end	endendfunction ENT:SelectSchedule()	if self.noticed == true then		self:ClearSchedule()		self:SetSchedule(SCHED_RUN_RANDOM)		self.noticed = false		timer.Create( "CalmDown", 5, 1, function() self:SetSchedule(SCHED_IDLE_WANDER) end )	elseif self.noticed == false then		if math.random(1,2) == 1 then			self:SetSchedule(SCHED_IDLE_WANDER)		elseif math.random(1,2) == 2 then			self:SetSchedule( SCHED_IDLE_STAND )		end	end	  endfunction ENT:OnRemove()	self:StopSound(self.idle1)	timer.Stop("CalmDown")	timer.Stop("DeathRun")end